

CREATE TABLE IF NOT EXISTS "user" (
  user_id VARCHAR(255) PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  gender VARCHAR(1) DEFAULT 'M' NOT NULL,
  birth DATE NOT NULL,
  register_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  name VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS survey (
  survey_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  expire_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  title VARCHAR(255) NOT NULL,
  description CLOB,
  user_id VARCHAR(255) NOT NULL,
  FOREIGN KEY (user_id) REFERENCES "user" (user_id)
);



CREATE TABLE IF NOT EXISTS question (
  ques_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  body CLOB NOT NULL,
  survey_id BIGINT NOT NULL,
  type VARCHAR(10) NOT NULL,
  FOREIGN KEY (survey_id) REFERENCES survey (survey_id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS selection (
  sequence INT NOT NULL,
  ques_id BIGINT NOT NULL,
  body CLOB,
  create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_etc BOOLEAN DEFAULT FALSE,
  PRIMARY KEY (ques_id, sequence),
  FOREIGN KEY (ques_id) REFERENCES question (ques_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS obj_answer (
  obj_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  written_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  user_id VARCHAR(255) NOT NULL,
  etc_answer CLOB,
  sequence INT NOT NULL,
  ques_id BIGINT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES "user" (user_id),
  FOREIGN KEY (ques_id, sequence) REFERENCES selection (ques_id, sequence) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS respond (
  respond_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  respond_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  user_id VARCHAR(255) NOT NULL,
  survey_id BIGINT NOT NULL,
  UNIQUE (survey_id, user_id),
  FOREIGN KEY (survey_id) REFERENCES survey (survey_id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES "user" (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS subj_answer (
  subj_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  written_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  response CLOB,
  ques_id BIGINT NOT NULL,
  user_id VARCHAR(255) NOT NULL,
  FOREIGN KEY (ques_id) REFERENCES question (ques_id) ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES "user" (user_id)
);
